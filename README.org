* ffr-photon-simulator-matlab
=bubblebath.m= script from [mathworks.com/matlabcentral/fileexchange/70348](https://www.mathworks.com/matlabcentral/fileexchange/70348-draw-randomly-centered-circles-of-various-sizes).
* Configuration Files
An FFR is represented by its configuration file, which defines properties such as the FFR's length, width, and number of layers. Several configuration files (just scripts) are included:
1. =config_template=: template for predefined configs.
2. =config_3M1860=: predefined to match the 3M1860 FFR.
3. =config_3M1920=: predefined to match the 3M1860 FFR.
4. =config_dynamic=: queries the user for certain values.

To change which configuration file is used, just source its code in =simulator.m= (at the start of the script).

The =Config.m= class provides static methods for the configuration files to use.
** Configuration Data Structures
All configuration options are packaged in structs or lists. The =ffrConfig= struct holds all the information necessary to construct the FFR object.
1. *ffrConfig*
   - nLayers: number of FFR layers
   - length:  length of the FFR
   - width:   width of the FFR
   - layerRadii: ranges of radii sizes per FFR layer
   - layerDensities: ranges of fiber density per FFR layer
   - layerWidths: the width of each FFR layer
   - =ffrLayerConfigs=: /list of FFR Layer config structs/ with elements:
     - width
     - nQLayers: number of Quadrant Layers
     - radiiRange: range of radii sizes
     - densityRange: range of densities
     - layerType: 'inner', 'outer', or 'filtering'
     - =quadrantLayerConfigs=: /list of Quadrant Layer config structs/ with elements:
       - nQuadrants: number of quadrants
       - width
       - length
       - heightOffset: y-axis transform distance for new fibers
       - =quadrantConfigs=: /list of Quadrant config structs/ with elements:
         - length
         - width
         - frameSize: [length, width]
         - minRadius
         - maxRadius
         - circSize: [minRadius, maxRadius]
         - density
         - heightOffset
         - lengthOffset: x-axis transform distance for new fibers
   - *boundaries*: /struct of boundary configs/ with elements:
     - *ffrBounds*: /struct of FFR bound configs/ with elements:
       - leftBound: half FFR length, negative
       - rightBound: half FFR length, positive
       - innerBound: 0
       - outerBound: FFR width
     - =interiorBounds=: /list of y-values/, one per interior boundary


Some of these values are randomized and some are calculated based on other values.
** Limitations
Eventually we'd like to move away from these limitations:
1. Currently, the configs source some values from the =Defaults= data class.
2. Also, the FFR's length and width must be multiples of the default quadrant length and width, respectively.
* Reducing runtime
** Pre-Allocating Arrays
*** Simple Arrays
**** photonPaths in rayTrace()
*** Object Arrays
**** DONE interiorBounds in FFR constructor
**** DONE quadrants in QuadrantLayer constructor
**** FFRLayers in FFR constructor (handle)
** Vectorizing =for= loops
**** DONE Create QuadrantLayers in FFRLayer constructor
**** DONE Make fiber lattice in QuadrantLayer
**** TODO Make fiber lattice in FFRLayer
**** DONE findCurrentQuadrant() in RayTracer
* Visuals
Thick grey lines      - FFR boundaries
Black Circles         - representation of fibers with center coordinates (dot).
Black dots (optional) - centers of the fibers
Red dots              - paths of ray traced photons
Blue text             - interior boundary (y-)values

#  LocalWords:  FFR FFRLayer QuadrantLayer
* Naming Conventions
We need a naming convention for simulation data files and image files. All config variables per simulation are highly relevant to its results, but some are particularly relevant:
- FFR model
- FFR length and width
- number of FFR layers
- number of incident photons

Including only config information in filenames would lead to duplicates. It's easiest to include a timestamp to differentiate repeated simulation trials.

The simulation results (nLayers x 2 array of photons available for decontamination in each FFR Layer) are written to a =csv= file named: =<nPhotons>ph_<nLayers>layer-<time>.csv= in the directory =data/<model>/<length>x<width>/=, where =<model>= is the FFR model, =<length>= is the FFR length, in microns, =<width>= is the FFR width, in microns, =<nPhotons>= are the number of incident photons, =<nLayers>= are the number of FFR layers, and =<time>= is the current time in hours, minutes, and seconds (hh-mm-ss). The number of incident photons is the value which changes most often, so it makes sense to use directories for the other values and exclude them from the filenames.

An example: =data/3M9210/5000x900/16000ph_9layer.csv=.

The vector graphics image of the simulation visualization and the text file holding the full config used for the simulation follow the same naming convention as the data files, but are under different top-level directories. Examples are sufficiently explanatory:
- image:  =images/3M9210/5000x900/16000ph_9layer.svg=
- text config:  =configs/3M9210/5000x900/16000ph_9layer.txt=

The =data/=, =images/=, and =configs/= directories are all stored under the =results/= directory of the repository.
