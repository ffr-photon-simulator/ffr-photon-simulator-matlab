* ffr-photon-simulator-matlab
=bubblebath.m= script from [mathworks.com/matlabcentral/fileexchange/70348](https://www.mathworks.com/matlabcentral/fileexchange/70348-draw-randomly-centered-circles-of-various-sizes).
* Configuration Files
An FFR is represented by its configuration file, which defines properties such as the FFR's length, width, and number of layers. Several configuration files (just scripts) are included:
1. =config_template=: template for predefined configs.
2. =config_3M1860=: predefined to match the 3M1860 FFR.
3. =config_3M1920=: predefined to match the 3M1860 FFR.
4. =config_dynamic=: queries the user for certain values.

To change which configuration file is used, just source its code in =simulator.m= (at the start of the script).

The =Config.m= class provides static methods for the configuration files to use.
** Configuration Data Structures
All configuration options are packaged in structs or lists. The =ffrConfig= struct holds all the information necessary to construct the FFR object.
1. *ffrConfig*
   - nLayers: number of FFR layers
   - length:  length of the FFR
   - width:   width of the FFR
   - layerRadii: ranges of radii sizes per FFR layer
   - layerDensities: ranges of fiber density per FFR layer
   - layerWidths: the width of each FFR layer
   - =ffrLayerConfigs=: /list of FFR Layer config structs/ with elements:
     - width
     - nQLayers: number of Quadrant Layers
     - radiiRange: range of radii sizes
     - densityRange: range of densities
     - layerType: 'inner', 'outer', or 'filtering'
     - =quadrantLayerConfigs=: /list of Quadrant Layer config structs/ with elements:
       - nQuadrants: number of quadrants
       - width
       - length
       - heightOffset: y-axis transform distance for new fibers
       - =quadrantConfigs=: /list of Quadrant config structs/ with elements:
         - length
         - width
         - frameSize: [length, width]
         - minRadius
         - maxRadius
         - circSize: [minRadius, maxRadius]
         - density
         - heightOffset
         - lengthOffset: x-axis transform distance for new fibers
   - *boundaries*: /struct of boundary configs/ with elements:
     - *ffrBounds*: /struct of FFR bound configs/ with elements:
       - leftBound: half FFR length, negative
       - rightBound: half FFR length, positive
       - innerBound: 0
       - outerBound: FFR width
     - =interiorBounds=: /list of y-values/, one per interior boundary


Some of these values are randomized and some are calculated based on other values.
** Limitations
Eventually we'd like to move away from these limitations:
1. Currently, the configs source some values from the =Defaults= data class.
2. Also, the FFR's length and width must be multiples of the default quadrant length and width, respectively.
* Reducing runtime
** Pre-Allocating Arrays
*** Simple Arrays
**** photonPaths in rayTrace()
*** Object Arrays
**** DONE interiorBounds in FFR constructor
**** DONE quadrants in QuadrantLayer constructor
**** FFRLayers in FFR constructor (handle)
** Vectorizing =for= loops
**** DONE Create QuadrantLayers in FFRLayer constructor
**** DONE Make fiber lattice in QuadrantLayer
**** TODO Make fiber lattice in FFRLayer
**** DONE findCurrentQuadrant() in RayTracer
* Visuals
Black box  - bubble bath frame and lattice boundary.
Circles    - representation of fibers with center coordinates (dot).
Black dots - centers of the fibers
Red dots   - paths of ray traced photons
* =ffr_simulator.m=
This is the script which runs a simulation. You write a config file and this script reads that file.
It then constructs the necessary layers and runs the requested ray tracing function.

The method =rayTraceSequentialLayers()= ray traces photons through one layer, and makes
the transmitted photons of that layer the incoming photons for the next layer. It
repeats this process for an array of layers, with the first element in the array
as the first layer. For example, the first layer would be the outer exterior layer of
an FFR, the middle layers would be the interior layers of an FFR-- with some
filtering layers, specifically--, and the last layer would be the inner exterior
layer of an FFR.

Each layer has its own boundaries: the inner, outer, left, and right.

For each layer, =rayTraceSequentialLayers()= displays the number of photons which reached:
- the inner boundary
- the outer boundary
- the left boundary
- the right boundary

At the end, it displays the number of photons which reached:
- the inner boundary of inner, exterior layer
- the left boundary of any layer
- the right boundary of any layer

The method =rayTraceSingleLayer()= traces initial photons through a single layer and displays the results.

The method =rayTraceLayerStack()= traces initial photons through a layer stack, which is just a Layer but represents many layers stacked together.
* Classes
An =FFR= is built from =FFRLayers= (exterior, interior, filtering, etc). To achieve a variable density within each =FFRLayer=, the fiber data for each =FFRLayer= is aggregated from the data of at least one =QuadrantLayer=. A =QuadrantLayer= aggregates fiber data from at least one =Quadrant=. Each =Quadrant= runs =bubblebath()= to generate its fiber data.

** FFR
*** FFRLayer
**** QuadrantLayer
***** Quadrant
* Old Classes
Some under development on the =layer_quadrants= [[https://github.com/ffr-photon-simulator/ffr-photon-simulator-matlab/tree/layer_quadrants][branch]].
** =QuadrantLayer=
Represents a layer of an FFR.
*** *Attributes*
- quadrant config
- a QuadrantLattice, which represents the fibers
- lattice length (μ)
- lattice width (μ)
- axis handle to allow plotting the layer
*** Methods
- =plotLayer()= - with bounds, fiber centers, fiber circles
- =plotPhotons()= - at bounds, ray traced paths
- lattice attribute getters
** =QuadrantLattice=
Represents the fibers in a single layer. Creates and stores Quadrant objects and builds the lattice from the data in the Quadrants.
*** Attributes
- =F_MIN_SEPARATION= - the minimum separation between fibers
- =LATTICE_I= - a 10μ basis distance for the x-axis
- =LATTICE_J= - a 10μ basis distance for the y-axis
*** Methods
** =Quadrant=
Represents a quadrant in the fiber lattice. The following parameters used in =bubblebath_noPlot= can be configured:
- size of the quadrant (length and width, μ).
- mininum and maximum radii of the quadrant's fibers.
- density of fibers throughout the quadrant.

Stores the fiber data and the config struct for =bubblebath_noPlot=.
*** Attributes
Set in config file and passed to constructor.
- =minRadius= - minimum fiber radius.
- =maxRadius= - maximum fiber radius.
- =frameSize= - length and width of quadrant (μ).
- =density= - density of fibers.
*** Methods
=Quadrant()= - constructor. Stores quadrant values in a struct and runs =bubblebath_noPlot=.

#  LocalWords:  FFR FFRLayer QuadrantLayer
